{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Jugnu (Fire-Fly) Fire flies are called Jugnu in Hindi. Jugnu framework is the JavaScript framework for developing Firebase Applications","title":"Home"},{"location":"#jugnu-fire-fly","text":"Fire flies are called Jugnu in Hindi. Jugnu framework is the JavaScript framework for developing Firebase Applications","title":"Jugnu (Fire-Fly)"},{"location":"installation/","text":"Installation Include jugnu in your package.json OR install it : npm install @fire-fly/jugnu","title":"Installation"},{"location":"installation/#installation","text":"Include jugnu in your package.json OR install it : npm install @fire-fly/jugnu","title":"Installation"},{"location":"usage/","text":"Usage Jugnu is compaitable with other Javascript frameworks. Annotations Annotate your typescript classes and members. Create any class that represents an entity. @FirebaseCollection class Person{ @DocumentKey name: String; @DocumentField age: Number; location?: String; @DocumentField phone: String; } Create Document const personCollection = jugnu.createFirebaseCollection(Person); const varun = new Person(\"Varun Verma\"); varun.age = 25; varun.location = \"India\"; varun.phone = \"+91-1234567890\"; personCollection.create(varun); Query Documents const personList: Person[]; personList = await personCollection.query([]); console.log(personList); Delete Document await personCollection.delete(varun);","title":"Usage"},{"location":"usage/#usage","text":"Jugnu is compaitable with other Javascript frameworks.","title":"Usage"},{"location":"usage/#annotations","text":"Annotate your typescript classes and members. Create any class that represents an entity. @FirebaseCollection class Person{ @DocumentKey name: String; @DocumentField age: Number; location?: String; @DocumentField phone: String; }","title":"Annotations"},{"location":"usage/#create-document","text":"const personCollection = jugnu.createFirebaseCollection(Person); const varun = new Person(\"Varun Verma\"); varun.age = 25; varun.location = \"India\"; varun.phone = \"+91-1234567890\"; personCollection.create(varun);","title":"Create Document"},{"location":"usage/#query-documents","text":"const personList: Person[]; personList = await personCollection.query([]); console.log(personList);","title":"Query Documents"},{"location":"usage/#delete-document","text":"await personCollection.delete(varun);","title":"Delete Document"}]}